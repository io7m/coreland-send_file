#!/bin/sh

fatal()
{
  echo "cc-link: fatal: $1" 1>&2
  exit 1
}

if [ $# -lt 2 ]
then
  echo "cc-link: usage: [@dir] basename objects ..." 1>&2
  exit 1
fi

#
# check if base directory was specified
#

BASE_DIR="."
echo "$1" | grep '^@' 2>&1 >/dev/null
if [ $? -eq 0 ]
then
  BASE_DIR=`echo $1 | sed 's/^@//g'`
  shift
fi

#
# Assume source is being cross linked if there is a cross-linker
# defined.
#

if [ -f "${BASE_DIR}/conf-x-ld" ]
then
  LD=`head -n 1 "${BASE_DIR}/conf-x-ld"`
  if [ $? -ne 0 ]
  then
    fatal "could not read ${BASE_DIR}/conf-x-ld"
  fi
  SYSTYPE=`head -n 1 "${BASE_DIR}/conf-x-systype"`
  if [ $? -ne 0 ]
  then
    fatal "could not read ${BASE_DIR}/conf-x-systype"
  fi  
  LDTYPE=`head -n 1 "${BASE_DIR}/conf-x-ldtype"`
  if [ $? -ne 0 ]
  then
    fatal "could not read ${BASE_DIR}/conf-x-ldtype"
  fi
  LDFLAGS="${LDFLAGS} `head -n 1 ${BASE_DIR}/conf-x-ldflags 2>/dev/null`"
else
  LD=`head -n 1 "${BASE_DIR}/conf-ld"`
  if [ $? -ne 0 ]
  then
    fatal "could not read ${BASE_DIR}/conf-ld"
  fi
  SYSTYPE=`head -n 1 "${BASE_DIR}/conf-systype"`
  if [ $? -ne 0 ]
  then
    fatal "could not read ${BASE_DIR}/conf-systype"
  fi  
  LDTYPE=`head -n 1 "${BASE_DIR}/conf-ldtype"`
  if [ $? -ne 0 ]
  then
    fatal "could not read ${BASE_DIR}/conf-ldtype"
  fi
fi

LDFLAGS="${LDFLAGS} `head -n 1 ${BASE_DIR}/conf-ldflags 2>/dev/null`"

#
# Read global flag file list, if present.
#

if [ -f "${BASE_DIR}/conf-ldfflist" ]
then
  for f in `cat "${BASE_DIR}/conf-ldfflist"`
  do
    FLAGS=`cat $f 2>/dev/null`
    LDFLAGS="${LDFLAGS} ${FLAGS}"
  done
fi

out="$1"
shift

#
# Read local flag file list, if present.
#

if [ -f "${out}.lff" ]
then
  for f in `cat "${out}.lff"`
  do
    targ="`dirname $out`/`dirname $f`/`basename $f`"
    FLAGS="`cat $targ 2>/dev/null`"
    LDFLAGS="${LDFLAGS} ${FLAGS}"
  done
fi

exec ${LD} -o ${out} ${1+"$@"} ${LDFLAGS}
